#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Business_Management_App
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShopDataBase")]
	public partial class ShopDataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArrival_Day(Arrival_Day instance);
    partial void UpdateArrival_Day(Arrival_Day instance);
    partial void DeleteArrival_Day(Arrival_Day instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCPL_Product(CPL_Product instance);
    partial void UpdateCPL_Product(CPL_Product instance);
    partial void DeleteCPL_Product(CPL_Product instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomer_Purchase_List(Customer_Purchase_List instance);
    partial void UpdateCustomer_Purchase_List(Customer_Purchase_List instance);
    partial void DeleteCustomer_Purchase_List(Customer_Purchase_List instance);
    partial void InsertPPL_Product(PPL_Product instance);
    partial void UpdatePPL_Product(PPL_Product instance);
    partial void DeletePPL_Product(PPL_Product instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProduct_Purchase_List(Product_Purchase_List instance);
    partial void UpdateProduct_Purchase_List(Product_Purchase_List instance);
    partial void DeleteProduct_Purchase_List(Product_Purchase_List instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertVendor_Arrival_Day(Vendor_Arrival_Day instance);
    partial void UpdateVendor_Arrival_Day(Vendor_Arrival_Day instance);
    partial void DeleteVendor_Arrival_Day(Vendor_Arrival_Day instance);
    #endregion
		
		public ShopDataBaseDataContext() : 
				base(global::Business_Management_App.Properties.Settings.Default.ShopDataBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Arrival_Day> Arrival_Days
		{
			get
			{
				return this.GetTable<Arrival_Day>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CPL_Product> CPL_Products
		{
			get
			{
				return this.GetTable<CPL_Product>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Purchase_List> Customer_Purchase_Lists
		{
			get
			{
				return this.GetTable<Customer_Purchase_List>();
			}
		}
		
		public System.Data.Linq.Table<PPL_Product> PPL_Products
		{
			get
			{
				return this.GetTable<PPL_Product>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Product_Purchase_List> Product_Purchase_Lists
		{
			get
			{
				return this.GetTable<Product_Purchase_List>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<Vendor_Arrival_Day> Vendor_Arrival_Days
		{
			get
			{
				return this.GetTable<Vendor_Arrival_Day>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrival_Days")]
	public partial class Arrival_Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Day;
		
		private EntitySet<Vendor_Arrival_Day> _Vendor_Arrival_Days;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    #endregion
		
		public Arrival_Day()
		{
			this._Vendor_Arrival_Days = new EntitySet<Vendor_Arrival_Day>(new Action<Vendor_Arrival_Day>(this.attach_Vendor_Arrival_Days), new Action<Vendor_Arrival_Day>(this.detach_Vendor_Arrival_Days));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrival_Day_Vendor_Arrival_Day", Storage="_Vendor_Arrival_Days", ThisKey="Day", OtherKey="Day")]
		public EntitySet<Vendor_Arrival_Day> Vendor_Arrival_Days
		{
			get
			{
				return this._Vendor_Arrival_Days;
			}
			set
			{
				this._Vendor_Arrival_Days.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendor_Arrival_Days(Vendor_Arrival_Day entity)
		{
			this.SendPropertyChanging();
			entity.Arrival_Day = this;
		}
		
		private void detach_Vendor_Arrival_Days(Vendor_Arrival_Day entity)
		{
			this.SendPropertyChanging();
			entity.Arrival_Day = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="Name", OtherKey="Category")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CPL_Product")]
	public partial class CPL_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CPL_Id;
		
		private int _Product_Id;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<Customer_Purchase_List> _Customer_Purchase_List;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPL_IdChanging(int value);
    partial void OnCPL_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public CPL_Product()
		{
			this._Customer_Purchase_List = default(EntityRef<Customer_Purchase_List>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPL_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CPL_Id
		{
			get
			{
				return this._CPL_Id;
			}
			set
			{
				if ((this._CPL_Id != value))
				{
					if (this._Customer_Purchase_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCPL_IdChanging(value);
					this.SendPropertyChanging();
					this._CPL_Id = value;
					this.SendPropertyChanged("CPL_Id");
					this.OnCPL_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Purchase_List_CPL_Product", Storage="_Customer_Purchase_List", ThisKey="CPL_Id", OtherKey="Id", IsForeignKey=true)]
		public Customer_Purchase_List Customer_Purchase_List
		{
			get
			{
				return this._Customer_Purchase_List.Entity;
			}
			set
			{
				Customer_Purchase_List previousValue = this._Customer_Purchase_List.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Purchase_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Purchase_List.Entity = null;
						previousValue.CPL_Products.Remove(this);
					}
					this._Customer_Purchase_List.Entity = value;
					if ((value != null))
					{
						value.CPL_Products.Add(this);
						this._CPL_Id = value.Id;
					}
					else
					{
						this._CPL_Id = default(int);
					}
					this.SendPropertyChanged("Customer_Purchase_List");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CPL_Product", Storage="_Product", ThisKey="Product_Id", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CPL_Products.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CPL_Products.Add(this);
						this._Product_Id = value.Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone_Number;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Address;
		
		private EntitySet<Customer_Purchase_List> _Customer_Purchase_Lists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Customer()
		{
			this._Customer_Purchase_Lists = new EntitySet<Customer_Purchase_List>(new Action<Customer_Purchase_List>(this.attach_Customer_Purchase_Lists), new Action<Customer_Purchase_List>(this.detach_Customer_Purchase_Lists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="Char(8)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Purchase_List", Storage="_Customer_Purchase_Lists", ThisKey="Id", OtherKey="Customer_Id")]
		public EntitySet<Customer_Purchase_List> Customer_Purchase_Lists
		{
			get
			{
				return this._Customer_Purchase_Lists;
			}
			set
			{
				this._Customer_Purchase_Lists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Purchase_Lists(Customer_Purchase_List entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Customer_Purchase_Lists(Customer_Purchase_List entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Purchase_List")]
	public partial class Customer_Purchase_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<float> _Total_Amount;
		
		private System.Nullable<float> _Amount_Paid;
		
		private System.Nullable<int> _Customer_Id;
		
		private EntitySet<CPL_Product> _CPL_Products;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTotal_AmountChanging(System.Nullable<float> value);
    partial void OnTotal_AmountChanged();
    partial void OnAmount_PaidChanging(System.Nullable<float> value);
    partial void OnAmount_PaidChanged();
    partial void OnCustomer_IdChanging(System.Nullable<int> value);
    partial void OnCustomer_IdChanged();
    #endregion
		
		public Customer_Purchase_List()
		{
			this._CPL_Products = new EntitySet<CPL_Product>(new Action<CPL_Product>(this.attach_CPL_Products), new Action<CPL_Product>(this.detach_CPL_Products));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Amount", DbType="Real")]
		public System.Nullable<float> Total_Amount
		{
			get
			{
				return this._Total_Amount;
			}
			set
			{
				if ((this._Total_Amount != value))
				{
					this.OnTotal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount = value;
					this.SendPropertyChanged("Total_Amount");
					this.OnTotal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Paid", DbType="Real")]
		public System.Nullable<float> Amount_Paid
		{
			get
			{
				return this._Amount_Paid;
			}
			set
			{
				if ((this._Amount_Paid != value))
				{
					this.OnAmount_PaidChanging(value);
					this.SendPropertyChanging();
					this._Amount_Paid = value;
					this.SendPropertyChanged("Amount_Paid");
					this.OnAmount_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Id", DbType="Int")]
		public System.Nullable<int> Customer_Id
		{
			get
			{
				return this._Customer_Id;
			}
			set
			{
				if ((this._Customer_Id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IdChanging(value);
					this.SendPropertyChanging();
					this._Customer_Id = value;
					this.SendPropertyChanged("Customer_Id");
					this.OnCustomer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Purchase_List_CPL_Product", Storage="_CPL_Products", ThisKey="Id", OtherKey="CPL_Id")]
		public EntitySet<CPL_Product> CPL_Products
		{
			get
			{
				return this._CPL_Products;
			}
			set
			{
				this._CPL_Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Purchase_List", Storage="_Customer", ThisKey="Customer_Id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Purchase_Lists.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Purchase_Lists.Add(this);
						this._Customer_Id = value.Id;
					}
					else
					{
						this._Customer_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CPL_Products(CPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Purchase_List = this;
		}
		
		private void detach_CPL_Products(CPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Purchase_List = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PPL_Product")]
	public partial class PPL_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PPL_Invoice_Number;
		
		private int _Vendor_Id;
		
		private int _Product_Id;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product_Purchase_List> _Product_Purchase_List;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPPL_Invoice_NumberChanging(int value);
    partial void OnPPL_Invoice_NumberChanged();
    partial void OnVendor_IdChanging(int value);
    partial void OnVendor_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public PPL_Product()
		{
			this._Product = default(EntityRef<Product>);
			this._Product_Purchase_List = default(EntityRef<Product_Purchase_List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPL_Invoice_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PPL_Invoice_Number
		{
			get
			{
				return this._PPL_Invoice_Number;
			}
			set
			{
				if ((this._PPL_Invoice_Number != value))
				{
					if (this._Product_Purchase_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPPL_Invoice_NumberChanging(value);
					this.SendPropertyChanging();
					this._PPL_Invoice_Number = value;
					this.SendPropertyChanged("PPL_Invoice_Number");
					this.OnPPL_Invoice_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vendor_Id
		{
			get
			{
				return this._Vendor_Id;
			}
			set
			{
				if ((this._Vendor_Id != value))
				{
					if (this._Product_Purchase_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendor_IdChanging(value);
					this.SendPropertyChanging();
					this._Vendor_Id = value;
					this.SendPropertyChanged("Vendor_Id");
					this.OnVendor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PPL_Product", Storage="_Product", ThisKey="Product_Id", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PPL_Products.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PPL_Products.Add(this);
						this._Product_Id = value.Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Purchase_List_PPL_Product", Storage="_Product_Purchase_List", ThisKey="PPL_Invoice_Number,Vendor_Id", OtherKey="Invoice_Number,Vendor_Id", IsForeignKey=true)]
		public Product_Purchase_List Product_Purchase_List
		{
			get
			{
				return this._Product_Purchase_List.Entity;
			}
			set
			{
				Product_Purchase_List previousValue = this._Product_Purchase_List.Entity;
				if (((previousValue != value) 
							|| (this._Product_Purchase_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Purchase_List.Entity = null;
						previousValue.PPL_Products.Remove(this);
					}
					this._Product_Purchase_List.Entity = value;
					if ((value != null))
					{
						value.PPL_Products.Add(this);
						this._PPL_Invoice_Number = value.Invoice_Number;
						this._Vendor_Id = value.Vendor_Id;
					}
					else
					{
						this._PPL_Invoice_Number = default(int);
						this._Vendor_Id = default(int);
					}
					this.SendPropertyChanged("Product_Purchase_List");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<float> _Buy_Price;
		
		private System.Nullable<float> _Sell_Price;
		
		private string _Category;
		
		private EntitySet<CPL_Product> _CPL_Products;
		
		private EntitySet<PPL_Product> _PPL_Products;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnBuy_PriceChanging(System.Nullable<float> value);
    partial void OnBuy_PriceChanged();
    partial void OnSell_PriceChanging(System.Nullable<float> value);
    partial void OnSell_PriceChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public Product()
		{
			this._CPL_Products = new EntitySet<CPL_Product>(new Action<CPL_Product>(this.attach_CPL_Products), new Action<CPL_Product>(this.detach_CPL_Products));
			this._PPL_Products = new EntitySet<PPL_Product>(new Action<PPL_Product>(this.attach_PPL_Products), new Action<PPL_Product>(this.detach_PPL_Products));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buy_Price", DbType="Real")]
		public System.Nullable<float> Buy_Price
		{
			get
			{
				return this._Buy_Price;
			}
			set
			{
				if ((this._Buy_Price != value))
				{
					this.OnBuy_PriceChanging(value);
					this.SendPropertyChanging();
					this._Buy_Price = value;
					this.SendPropertyChanged("Buy_Price");
					this.OnBuy_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_Price", DbType="Real")]
		public System.Nullable<float> Sell_Price
		{
			get
			{
				return this._Sell_Price;
			}
			set
			{
				if ((this._Sell_Price != value))
				{
					this.OnSell_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sell_Price = value;
					this.SendPropertyChanged("Sell_Price");
					this.OnSell_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(20)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CPL_Product", Storage="_CPL_Products", ThisKey="Id", OtherKey="Product_Id")]
		public EntitySet<CPL_Product> CPL_Products
		{
			get
			{
				return this._CPL_Products;
			}
			set
			{
				this._CPL_Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PPL_Product", Storage="_PPL_Products", ThisKey="Id", OtherKey="Product_Id")]
		public EntitySet<PPL_Product> PPL_Products
		{
			get
			{
				return this._PPL_Products;
			}
			set
			{
				this._PPL_Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category1", ThisKey="Category", OtherKey="Name", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Category = value.Name;
					}
					else
					{
						this._Category = default(string);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CPL_Products(CPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CPL_Products(CPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_PPL_Products(PPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_PPL_Products(PPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Purchase_List")]
	public partial class Product_Purchase_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<float> _Total_Amount_Paid;
		
		private System.Nullable<float> _Total_Amount;
		
		private int _Vendor_Id;
		
		private int _Invoice_Number;
		
		private EntitySet<PPL_Product> _PPL_Products;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTotal_Amount_PaidChanging(System.Nullable<float> value);
    partial void OnTotal_Amount_PaidChanged();
    partial void OnTotal_AmountChanging(System.Nullable<float> value);
    partial void OnTotal_AmountChanged();
    partial void OnVendor_IdChanging(int value);
    partial void OnVendor_IdChanged();
    partial void OnInvoice_NumberChanging(int value);
    partial void OnInvoice_NumberChanged();
    #endregion
		
		public Product_Purchase_List()
		{
			this._PPL_Products = new EntitySet<PPL_Product>(new Action<PPL_Product>(this.attach_PPL_Products), new Action<PPL_Product>(this.detach_PPL_Products));
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Amount_Paid", DbType="Real")]
		public System.Nullable<float> Total_Amount_Paid
		{
			get
			{
				return this._Total_Amount_Paid;
			}
			set
			{
				if ((this._Total_Amount_Paid != value))
				{
					this.OnTotal_Amount_PaidChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount_Paid = value;
					this.SendPropertyChanged("Total_Amount_Paid");
					this.OnTotal_Amount_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Amount", DbType="Real")]
		public System.Nullable<float> Total_Amount
		{
			get
			{
				return this._Total_Amount;
			}
			set
			{
				if ((this._Total_Amount != value))
				{
					this.OnTotal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount = value;
					this.SendPropertyChanged("Total_Amount");
					this.OnTotal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vendor_Id
		{
			get
			{
				return this._Vendor_Id;
			}
			set
			{
				if ((this._Vendor_Id != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendor_IdChanging(value);
					this.SendPropertyChanging();
					this._Vendor_Id = value;
					this.SendPropertyChanged("Vendor_Id");
					this.OnVendor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Invoice_Number
		{
			get
			{
				return this._Invoice_Number;
			}
			set
			{
				if ((this._Invoice_Number != value))
				{
					this.OnInvoice_NumberChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Number = value;
					this.SendPropertyChanged("Invoice_Number");
					this.OnInvoice_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Purchase_List_PPL_Product", Storage="_PPL_Products", ThisKey="Invoice_Number,Vendor_Id", OtherKey="PPL_Invoice_Number,Vendor_Id")]
		public EntitySet<PPL_Product> PPL_Products
		{
			get
			{
				return this._PPL_Products;
			}
			set
			{
				this._PPL_Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Product_Purchase_List", Storage="_Vendor", ThisKey="Vendor_Id", OtherKey="Id", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Product_Purchase_Lists.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Product_Purchase_Lists.Add(this);
						this._Vendor_Id = value.Id;
					}
					else
					{
						this._Vendor_Id = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PPL_Products(PPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Purchase_List = this;
		}
		
		private void detach_PPL_Products(PPL_Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Purchase_List = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Address;
		
		private string _Phone_Number;
		
		private EntitySet<Product_Purchase_List> _Product_Purchase_Lists;
		
		private EntitySet<Vendor_Arrival_Day> _Vendor_Arrival_Days;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    #endregion
		
		public Vendor()
		{
			this._Product_Purchase_Lists = new EntitySet<Product_Purchase_List>(new Action<Product_Purchase_List>(this.attach_Product_Purchase_Lists), new Action<Product_Purchase_List>(this.detach_Product_Purchase_Lists));
			this._Vendor_Arrival_Days = new EntitySet<Vendor_Arrival_Day>(new Action<Vendor_Arrival_Day>(this.attach_Vendor_Arrival_Days), new Action<Vendor_Arrival_Day>(this.detach_Vendor_Arrival_Days));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(20)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(20)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="Char(8)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Product_Purchase_List", Storage="_Product_Purchase_Lists", ThisKey="Id", OtherKey="Vendor_Id")]
		public EntitySet<Product_Purchase_List> Product_Purchase_Lists
		{
			get
			{
				return this._Product_Purchase_Lists;
			}
			set
			{
				this._Product_Purchase_Lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Vendor_Arrival_Day", Storage="_Vendor_Arrival_Days", ThisKey="Id", OtherKey="Vendor_Id")]
		public EntitySet<Vendor_Arrival_Day> Vendor_Arrival_Days
		{
			get
			{
				return this._Vendor_Arrival_Days;
			}
			set
			{
				this._Vendor_Arrival_Days.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_Purchase_Lists(Product_Purchase_List entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Product_Purchase_Lists(Product_Purchase_List entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
		
		private void attach_Vendor_Arrival_Days(Vendor_Arrival_Day entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Vendor_Arrival_Days(Vendor_Arrival_Day entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor_Arrival_Days")]
	public partial class Vendor_Arrival_Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Day;
		
		private int _Vendor_Id;
		
		private EntityRef<Arrival_Day> _Arrival_Day;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnVendor_IdChanging(int value);
    partial void OnVendor_IdChanged();
    #endregion
		
		public Vendor_Arrival_Day()
		{
			this._Arrival_Day = default(EntityRef<Arrival_Day>);
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					if (this._Arrival_Day.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vendor_Id
		{
			get
			{
				return this._Vendor_Id;
			}
			set
			{
				if ((this._Vendor_Id != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendor_IdChanging(value);
					this.SendPropertyChanging();
					this._Vendor_Id = value;
					this.SendPropertyChanged("Vendor_Id");
					this.OnVendor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrival_Day_Vendor_Arrival_Day", Storage="_Arrival_Day", ThisKey="Day", OtherKey="Day", IsForeignKey=true)]
		public Arrival_Day Arrival_Day
		{
			get
			{
				return this._Arrival_Day.Entity;
			}
			set
			{
				Arrival_Day previousValue = this._Arrival_Day.Entity;
				if (((previousValue != value) 
							|| (this._Arrival_Day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrival_Day.Entity = null;
						previousValue.Vendor_Arrival_Days.Remove(this);
					}
					this._Arrival_Day.Entity = value;
					if ((value != null))
					{
						value.Vendor_Arrival_Days.Add(this);
						this._Day = value.Day;
					}
					else
					{
						this._Day = default(string);
					}
					this.SendPropertyChanged("Arrival_Day");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Vendor_Arrival_Day", Storage="_Vendor", ThisKey="Vendor_Id", OtherKey="Id", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Vendor_Arrival_Days.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Vendor_Arrival_Days.Add(this);
						this._Vendor_Id = value.Id;
					}
					else
					{
						this._Vendor_Id = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
